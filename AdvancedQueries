Date and time: We can extract minute,hour, day of week, month and year from a timestamp. We use the extract method for this.

Examples:
SELECT extract(minute from payment_date) as minute FROM payment
ORDER BY minute ASC;

SELECT extract(year from payment_date) as year FROM payment
ORDER BY year DESC;

SELECT extract(month from payment_date) as month FROM payment
ORDER BY month DESC;

SELECT extract(month from payment_date) as month,extract(day from payment_date) as day,
extract(year from payment_date) as year FROM payment
ORDER BY year DESC;

String functions: Can perform operations on the selected column values such as upper(), lower(), concatenation using
|| operator, etc.

Examples:
SELECT upper(first_name), lower(last_name) FROM customer;
SELECT upper(first_name) || ' ' || lower(last_name) as full_name FROM customer;


Mathematical functions: Used to perform mathematical operations such as +,-,/,% betwee two columns or functions like
AVG(), COUNT() on a single column being selected.

Examples:
SELECT rental_id + customer_id as unique_id  FROM rental;
SELECT rental_id * customer_id as unique_id  FROM rental;
SELECT customer_id / rental_id  as unique_id  FROM rental;
SELECT customer_id % rental_id  as unique_id  FROM rental;
SELECT round(AVG(amount), 3) FROM payment;

Subquery: Used to select the output of a query as an input to another query usually inside the WHERE clause condition.

Examples:
SELECT * FROM payment
WHERE amount > (SELECT round(AVG(amount), 2) FROM payment);

SELECT film.title, film.release_year FROM film
WHERE film.film_id IN 
(SELECT inventory.film_id FROM rental
INNER JOIN inventory 
ON inventory.inventory_id = rental.inventory_id
WHERE return_date BETWEEN '2005-07-28'AND '2006-04-28');


Self join: Used to join a table to itself. It is used to avoid sub-queries or hardcoding of WHERE conditions.
Examples:
SELECT a.first_name, a.last_name, b.first_name, b.last_name
FROM customer as a, customer as b
WHERE a.first_name = b.last_name
ORDER BY a.first_name ASC;

which can also be written by using joins as:
SELECT a.first_name, a.last_name, b.first_name, b.last_name
FROM customer as a
INNER JOIN customer as b
ON a.first_name = b.last_name
ORDER BY a.first_name ASC;

which can also be written using sub-queries as:
SELECT first_name, last_name
FROM customer
WHERE first_name IN 
(SELECT last_name FROM customer)
ORDER BY first_name ASC; 